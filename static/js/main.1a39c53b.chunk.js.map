{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","input","setInput","handleInput","char","test","appendChar","handleClosingParen","deleteLastChar","handleSymbol","console","log","newChar","prevInput","num","length","endsWithNegSymbol","prevState","toString","slice","calculateInput","missingClosingParenRegex","endsWithSymbolRegex","eval","className","id","onClick","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1a39c53b.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport \"./App.css\";\n\nfunction App() {\n  const [input, setInput] = useState(\"0\");\n\n  const handleInput = char => {\n    const handleDecimal = () => {\n      const lastNumHasDecimalRegex = /([\\d]*\\.[\\d]*)$/;\n      const endsWithSymbolRegex = /[+\\-*/]$/;\n      if (input === \"0\") {\n        setInput(\"0.\");\n        return;\n      } else if (lastNumHasDecimalRegex.test(input)) {\n        return;\n      } else if (endsWithSymbolRegex.test(input)) {\n        appendChar(`0.`);\n      } else {\n        appendChar(char);\n      }\n    };\n\n    const handleSymbol = () => {\n      handleClosingParen();\n      const endsWithSymbol = /[+\\-*/]$/g;\n      const endsWithNegSymbol = /\\(-$/g;\n\n      if (endsWithNegSymbol.test(input)) {\n        deleteLastChar(3);\n        appendChar(`${char}`);\n        return;\n      } else if (endsWithSymbol.test(input)) {\n        if (char === \"-\") {\n          appendChar(\"(-\");\n        } else {\n          deleteLastChar();\n          appendChar(char);\n        }\n      } else if (input === \"0\") {\n        appendChar(`0${char}`);\n      } else {\n        appendChar(char);\n      }\n    };\n\n    switch (char) {\n      case \".\":\n        handleDecimal();\n        break;\n      case \"+\":\n      case \"/\":\n      case \"*\":\n      case \"-\":\n        handleSymbol();\n        break;\n      case \"0\":\n      case \"1\":\n      case \"2\":\n      case \"3\":\n      case \"4\":\n      case \"5\":\n      case \"6\":\n      case \"7\":\n      case \"8\":\n      case \"9\":\n        appendChar(char);\n        break;\n      default:\n        console.log(`Non-Standard Character Entered`);\n    }\n  };\n\n  const appendChar = newChar => {\n    if (input === \"0\") {\n      setInput(newChar);\n      return;\n    }\n    if (input === \"Infinity\") {\n      setInput(newChar);\n    } else {\n      setInput(prevInput => prevInput + newChar);\n    }\n  };\n\n  const handleClosingParen = () => {\n    const missingClosingParenRegex = /(\\(-[\\d.*]+)$/g;\n    if (missingClosingParenRegex.test(input)) {\n      appendChar(\")\");\n    }\n  };\n\n  const deleteLastChar = (num = 1) => {\n    if (input.length === 1) {\n      setInput(\"0\");\n      return;\n    }\n    const endsWithNegSymbol = /\\(-$/g;\n    if (endsWithNegSymbol.test(input) && num === 1) {\n      setInput(prevState => prevState.toString().slice(0, -2));\n      return;\n    } else {\n      setInput(prevState => prevState.toString().slice(0, -num));\n    }\n  };\n\n  const calculateInput = () => {\n    const missingClosingParenRegex = /(\\(-[\\d.*]+)$/g;\n    const endsWithSymbolRegex = /[+\\-*/]$/g;\n    if (missingClosingParenRegex.test(input)) {\n      setInput(eval(`${input})`));\n    } else if (endsWithSymbolRegex.test(input)) {\n      setInput(eval(input.slice(0, -1)));\n    } else {\n      setInput(eval(input));\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1 className=\"title\">Javascript Calculator</h1>\n        <div className=\"calculator-app\">\n          <h2 id=\"display\" className=\"calcInput\">\n            {input}\n          </h2>\n          <div className=\"calcBtnContainer\">\n            <button\n              id=\"clear\"\n              className=\"functionBtn\"\n              onClick={() => setInput(\"0\")}\n            >\n              AC\n            </button>\n            <button\n              id=\"deleteBtn\"\n              className=\"functionBtn\"\n              onClick={() => deleteLastChar()}\n            >\n              DEL\n            </button>\n            <button\n              id=\"divide\"\n              className=\"symbolBtn\"\n              onClick={() => handleInput(\"/\")}\n            >\n              /\n            </button>\n            <button\n              id=\"multiply\"\n              className=\"symbolBtn\"\n              onClick={() => handleInput(\"*\")}\n            >\n              *\n            </button>\n            <button\n              id=\"seven\"\n              className=\"numberBtn\"\n              onClick={() => handleInput(\"7\")}\n            >\n              7\n            </button>\n            <button\n              id=\"eight\"\n              className=\"numberBtn\"\n              onClick={() => handleInput(\"8\")}\n            >\n              8\n            </button>\n            <button\n              id=\"nine\"\n              className=\"numberBtn\"\n              onClick={() => handleInput(\"9\")}\n            >\n              9\n            </button>\n            <button\n              id=\"subtract\"\n              className=\"symbolBtn\"\n              onClick={() => handleInput(\"-\")}\n            >\n              -\n            </button>\n            <button\n              id=\"four\"\n              className=\"numberBtn\"\n              onClick={() => handleInput(\"4\")}\n            >\n              4\n            </button>\n            <button\n              id=\"five\"\n              className=\"numberBtn\"\n              onClick={() => handleInput(\"5\")}\n            >\n              5\n            </button>\n            <button\n              id=\"six\"\n              className=\"numberBtn\"\n              onClick={() => handleInput(\"6\")}\n            >\n              6\n            </button>\n            <button\n              id=\"add\"\n              className=\"symbolBtn\"\n              onClick={() => handleInput(\"+\")}\n            >\n              +\n            </button>\n            <button\n              id=\"one\"\n              className=\"numberBtn\"\n              onClick={() => handleInput(\"1\")}\n            >\n              1\n            </button>\n            <button\n              id=\"two\"\n              className=\"numberBtn\"\n              onClick={() => handleInput(\"2\")}\n            >\n              2\n            </button>\n            <button\n              id=\"three\"\n              className=\"numberBtn\"\n              onClick={() => handleInput(\"3\")}\n            >\n              3\n            </button>\n            <button\n              id=\"equals\"\n              className=\"functionBtn\"\n              onClick={() => calculateInput()}\n            >\n              =\n            </button>\n            <button\n              id=\"zero\"\n              className=\"numberBtn\"\n              onClick={() => handleInput(\"0\")}\n            >\n              0\n            </button>\n            <button\n              id=\"decimal\"\n              className=\"numberBtn\"\n              onClick={() => handleInput(\".\")}\n            >\n              .\n            </button>\n          </div>\n        </div>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}